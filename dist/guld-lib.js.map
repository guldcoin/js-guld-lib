{"version":3,"sources":["webpack://guld-lib/webpack/universalModuleDefinition","webpack://guld-lib/webpack/bootstrap","webpack://guld-lib/./lib/db.js","webpack://guld-lib/./lib/index.js","webpack://guld-lib/./lib/transaction.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,IAAI;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yBAAyB,IAAI;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,IAAI;AACJ;AACA,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,kCAAkC,6CAA6C;AAC/E;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,kDAAkD;AAC9F;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM;AACpC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,mCAAmC;AACjG,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,iBAAiB,GAAG;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,oDAAoD;AACzE,2BAA2B,QAAQ;AACnC,KAAK,cAAc;AACnB,MAAM,OAAO,aAAa,OAAO,GAAG;AACpC,MAAM,OAAO,cAAc,OAAO,GAAG;AACrC,MAAM,WAAW,YAAY,OAAO,GAAG;AACvC,MAAM,WAAW,aAAa,OAAO,GAAG;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,oDAAoD;AACzE,wBAAwB,QAAQ;AAChC,KAAK,cAAc;AACnB,MAAM,YAAY,YAAY,OAAO,GAAG;AACxC,MAAM,YAAY,aAAa,OAAO,GAAG;AACzC,0BAA0B,OAAO,GAAG;AACpC,kBAAkB,YAAY,KAAK,OAAO,GAAG;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB,KAAK;AACL;AACA;AACA,qBAAqB,oDAAoD;AACzE,2BAA2B,QAAQ,cAAc;AACjD,KAAK,cAAc;AACnB,MAAM,MAAM,aAAa,OAAO,GAAG;AACnC,MAAM,MAAM,cAAc,OAAO,GAAG;AACpC,yBAAyB,OAAO,GAAG;AACnC,2BAA2B,MAAM,GAAG,MAAM,EAAE,MAAM,MAAM,OAAO,GAAG;AAClE;AACA;AACA","file":"guld-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"guld-lib\"] = factory();\n\telse\n\t\troot[\"guld-lib\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/index.js\");\n","\nfunction reInitDecimal (dec) {\n  var val = new Decimal(0)\n  val.d = dec.d\n  val.e = dec.e\n  val.s = dec.s\n  return val\n}\n\nfunction reInitAmount (amt) {\n  if (amt instanceof Amount) return amt\n  else return new Amount(reInitDecimal(amt.value), amt.commodity)\n}\n\nfunction reInitBalance (bal) {\n  if (bal instanceof Balance) return bal\n  else {\n\t  var balance = new Balance({})\n    Object.keys(bal).forEach(b => {\n      if (b.indexOf('_') === -1) {\n        balance = balance.add(reInitAmount(bal[b]))\n      }\n    })\n    return balance\n  }\n}\n\nfunction reInitAccount (acct) {\n  if (acct instanceof Account) return acct\n  else {\n\t  var account = new Account(new Balance({}))\n\t  Object.keys(acct).forEach(act => {\n\t    if (act === '__bal') {\n        account.__bal = reInitBalance(acct[act])\n\t    } else if (act.indexOf('_') === -1) {\n\t      account[act] = reInitAccount(acct[act])\n\t    }\n\t  })\n\t  return account\n  }\n}\n\nclass DBError extends Error {\n  constructor (message, code) {\n    super(message)\n    this.code = code\n  }\n}\n\nclass KeyValueDB {\n  constructor () {\n    this._db = {}\n  }\n\n  async get (key) {\n    if (this._db.hasOwnProperty(key)) return Promise.resolve(db[key])\n    else throw new DBError(`${key} not found`, 'ENOENT')\n  }\n\n  async _set (key, value) {\n    this._db[key] = value\n    return Promise.resolve()\n  }\n\n  async set (key, value, overwrite) {\n    if (overwrite) return this._set(value)\n    try {\n      await this.get(key)\n    } catch (e) {\n      return this._set(key, value)\n    }\n    throw new DBError(`${key} already exists`, 'EEXIST')\n  }\n\n  async getMany (keys) {\n    return Promise.all(keys.map(this.get))\n  }\n\n  async setMany (values, overwrite) {\n    return Promise.all(Object.keys(values).map(k => {\n      return this.set(k, values[k], overwrite)\n    }))\n  }\n\n  // cache and helper functions\n  async updateLedger (tx) {\n    return new Promise((resolve, reject) => {\n      getLedger().then(ledger => {\n        var newJournal = `${ledger.options.raw}\n  ${tx}\n  `\n        chrome.storage.local.set({'journal': newJournal}, () => {\n          if (chrome.runtime.lastError) reject(chrome.runtime.lastError)\n          else {\n            getBalance(self.guldname, false).then(bal => {\n              balance = bal\n              resolve()\n            }).catch(reject)\n          }\n        })\n      })\n    })\n  }\n\n  async getThenSetLedger () {\n    return new Promise((resolve, reject) => {\n      blocktree.setLedger().then(() => {\n        chrome.storage.local.set({'journal': blocktree.getLedger().options.raw}, () => {\n          if (chrome.runtime.lastError) reject(chrome.runtime.lastError)\n          else resolve(blocktree.getLedger())\n        })\n      }).catch(reject)\n    })\n  }\n\n  async getLedger (useCache) {\n    if (typeof useCache === 'undefined') useCache = true\n\n    if (useCache) {\n      return new Promise((resolve, reject) => {\n        chrome.storage.local.get(['journal'], j => {\n          if (j && j.journal) {\n            blocktree._ledger = new Ledger({'file': '-', 'raw': j.journal, 'binary': 'chrome'})\n            resolve(blocktree.getLedger())\n            blocktree.emit('ledger-ready')\n          } else {\n            getThenSetLedger().then(resolve).catch(reject)\n          }\n        })\n      })\n    } else {\n      return getThenSetLedger()\n    }\n  }\n\n  async getBalance (gname, useCache) {\n    gname = gname || self.guldname\n    if (typeof useCache === 'undefined') useCache = true\n    if (useCache) {\n      return new Promise((resolve, reject) => {\n        var cacheKey = `bal_${gname}`\n        chrome.storage.local.get([cacheKey], bal => {\n          if (bal && bal[cacheKey]) {\n            resolve(reInitAccount(bal[cacheKey]))\n          } else {\n            getThenSetBalances(gname).then(resolve).catch(reject)\n          }\n        })\n      })\n    } else {\n      return getThenSetBalances(gname)\n    }\n  }\n}\n\nclass ChromeStorageDB extends KeyValueDB {\n  async get (key) {\n    return this.getMany([key])\n  }\n\n  async _set (key, value) {\n    var o = {}\n    o[key] = value\n    return this.setMany([o])\n  }\n\n  async getMany (keys) {\n    return new Promise((resolve, reject) => {\n      chrome.storage.local.get(keys, vals => {\n        if (typeof chrome.runtime.lastError !== 'undefined') { reject(chrome.runtime.lastError) } else resolve(vals)\n      })\n    })\n  }\n\n  async setMany (values, overwrite) {\n    var keys = Object.keys(values)\n    var got = await getMany(keys)\n    Object.keys(got).forEach(k => {\n      delete values[k]\n    })\n    await pify(chrome.storage.local.set)(values)\n    if (typeof chrome.runtime.lastError !== 'undefined') throw new DBError(chrome.runtime.lastError, 'EIO')\n  }\n}\n","/**\n * @module guld-lib\n * @license MIT\n * @author zimmi\n */\n\nmodule.exports = {\n  blocktree: require('./blocktree.js'),\n  transaction: require('./transaction.js'),\n  pgp: require('./pgp.js'),\n  git: require('./git.js'),\n  fs: require('./fs.js'),\n  db: require('./db.js')\n}\n","class Transaction {\n  constructor (text) {\n    this.raw = text\n  }\n\n  static getType (tx) {\n    var re = /^[0-9]{4}\\/[0-9]{2}\\/[0-9]{2} \\* [ a-zA-Z0-9]*$/m\n    var txheader = re.exec(tx)\n    if (txheader && txheader.length > 0 && txheader[0].length > 0) {\n      return txheader[0].split('*')[1].trim()\n    } else {\n      throw new TypeError('expected a ledger transaction, but found unknown type')\n    }\n  }\n\n  static getTimestamp (tx) {\n    var re = /^ {4}; timestamp: [0-9]+$/m\n    var txheader = re.exec(tx)\n    if (txheader && txheader.length > 0 && txheader[0].length > 0) {\n      return txheader[0].split(':')[1].trim()\n    } else {\n      throw new TypeError('expected a ledger transaction, but found unknown type')\n    }\n  }\n\n  static getAmount (tx) {\n    var re = /^ +[:a-zA-Z-]+ +[0-9a-zA-Z,. ]+$/m\n    var txheader = re.exec(tx)\n    if (txheader && txheader.length > 0 && txheader[0].length > 0) {\n      var posting = txheader[0].replace(',', '')\n      re = /[0-9.]+/\n      txheader = re.exec(posting)\n      if (txheader && txheader.length > 0 && txheader[0].length > 0) {\n        return txheader[0]\n      } else {\n        throw new TypeError('expected a ledger transaction, but found unknown type')\n      }\n    } else {\n      throw new TypeError('expected a ledger transaction, but found unknown type')\n    }\n  }\n}\n\nclass Transfer extends Transaction {\n  static create (sender, receipient, amount, commodity, time) {\n    time = time || Math.trunc(Date.now() / 1000)\n    var date = new Date(time * 1000)\n    var datestr = `${date.toISOString().split('T')[0].replace(/-/g, '/')}`\n    return new Transfer(`${datestr} * transfer\n    ; timestamp: ${time}\n    ${sender}:Assets   -${amount} ${commodity}\n    ${sender}:Expenses   ${amount} ${commodity}\n    ${receipient}:Assets   ${amount} ${commodity}\n    ${receipient}:Income   -${amount} ${commodity}\n`)\n  }\n}\n\nclass Grant extends Transaction {\n  static create (contributor, amount, commodity, time) {\n    time = time || Math.trunc(Date.now() / 1000)\n    var date = new Date(time * 1000)\n    var datestr = `${date.toISOString().split('T')[0].replace(/-/g, '/')}`\n    return new Grant(`${datestr} * grant\n    ; timestamp: ${time}\n    ${contributor}:Assets   ${amount} ${commodity}\n    ${contributor}:Income   -${amount} ${commodity}\n    guld:Liabilities   -${amount} ${commodity}\n    guld:Equity:${contributor}   ${amount} ${commodity}\n`)\n  }\n}\n\nclass Register extends Transaction {\n  static create (rname, rtype, qty, commodity, payee, time) {\n    var amount = qty * 0.1\n    if (payee) {\n      payee = `:${payee}`\n    } else payee = ''\n    time = time || Math.trunc(Date.now() / 1000)\n    var date = new Date(time * 1000)\n    var datestr = `${date.toISOString().split('T')[0].replace(/-/g, '/')}`\n    return new Register(`${datestr} * register ${rtype}\n    ; timestamp: ${time}\n    ${rname}:Assets   -${amount} ${commodity}\n    ${rname}:Expenses   ${amount} ${commodity}\n    guld:Liabilities   ${amount} ${commodity}\n    guld:Income:register:${rtype}:${rname}${payee}   -${amount} ${commodity}\n`)\n  }\n}\n"],"sourceRoot":""}